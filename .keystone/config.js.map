{
  "version": 3,
  "sources": ["../keystone.ts", "../schema.ts", "../auth.ts"],
  "sourcesContent": ["// Welcome to Keystone!\n//\n// This file is what Keystone uses as the entry-point to your headless backend\n//\n// Keystone imports the default export of this file, expecting a Keystone configuration object\n//   you can find out more at https://keystonejs.com/docs/apis/config\n\nimport { config } from \"@keystone-6/core\";\n\n// to keep this file tidy, we define our schema in a different file\nimport { lists } from \"./schema\";\n\n// authentication is configured separately here too, but you might move this elsewhere\n// when you write your list-level access control functions, as they typically rely on session data\nimport { withAuth, session } from \"./auth\";\n\nexport default withAuth(\n  config({\n    db: {\n      // we're using sqlite for the fastest startup experience\n      //   for more information on what database might be appropriate for you\n      //   see https://keystonejs.com/docs/guides/choosing-a-database#title\n      provider: \"sqlite\",\n      url: \"file:./keystone.db\",\n    },\n    lists,\n    session,\n  })\n);\n", "// - https://keystonejs.com/docs/config/lists\n// see https://keystonejs.com/docs/fields/overview for the full list of fields\n\nimport { list } from \"@keystone-6/core\";\nimport type { Lists } from \".keystone/types\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport {\n  text,\n  relationship,\n  password,\n  timestamp,\n  select,\n  float,\n  multiselect,\n} from \"@keystone-6/core/fields\";\n\n// WARNING\n//   for this starter project, anyone can create, query, update and delete anything\n//   if you want to prevent random people on the internet from accessing your data,\n//   you can find out more at https://keystonejs.com/docs/guides/auth-and-access-control\n\nexport const lists: Lists = {\n  User: list({\n    access: allowAll,\n    fields: {\n      username: text({ validation: { isRequired: true }, isIndexed: \"unique\" }),\n      email: text({\n        isIndexed: \"unique\",\n      }),\n      phone: text({ validation: { isRequired: false } }),\n      firstname: text({ validation: { isRequired: true } }),\n      lastname: text({ validation: { isRequired: false } }),\n      role: select({\n        type: \"string\",\n        options: [\"admin\", \"customer\", \"employee\", \"manager\"],\n        defaultValue: \"customer\",\n        validation: { isRequired: true },\n        isIndexed: true,\n      }),\n      permissions: multiselect({\n        type: \"enum\",\n        options: [{ label: \"Warranty\", value: \"warranty\" }],\n      }),\n      ssid: text({ validation: { isRequired: false } }),\n      password: password({ validation: { isRequired: true } }),\n      workOrders: relationship({ ref: \"WorkOrder.creator\", many: true }),\n      clientOrders: relationship({ ref: \"WorkOrder.customer\", many: true }),\n      applicationsToApply: relationship({\n        ref: \"Application.applicant\",\n        many: true,\n      }),\n      applications: relationship({\n        ref: \"Application.creator\",\n        many: true,\n      }),\n    },\n  }),\n  WorkOrder: list({\n    access: allowAll,\n    fields: {\n      creator: relationship({\n        ref: \"User.workOrders\",\n        many: false,\n      }),\n      createdAt: timestamp({\n        defaultValue: { kind: \"now\" },\n        isOrderable: true,\n      }),\n\n      status: select({\n        type: \"string\",\n        options: [\"active\", \"inactive\", \"finished\", \"canceled\", \"offer\"],\n        defaultValue: \"inactive\",\n        validation: { isRequired: true },\n      }),\n      startedAt: timestamp(),\n      finishedAt: timestamp(),\n      car: relationship({\n        ref: \"Car.workOrders\",\n        many: false,\n      }),\n      customer: relationship({\n        ref: \"User.clientOrders\",\n        many: false,\n      }),\n      notes: text({}),\n      reduction: float({ validation: { isRequired: false, min: 0 } }),\n      applications: relationship({\n        ref: \"Application.workOrder\",\n        many: true,\n      }),\n    },\n  }),\n  Application: list({\n    access: allowAll,\n    fields: {\n      workOrder: relationship({\n        ref: \"WorkOrder.applications\",\n        many: false,\n      }),\n      startedAt: timestamp(),\n      finishedAt: timestamp(),\n      name: text({ validation: { isRequired: true } }),\n      description: text({}),\n      price: float({ validation: { isRequired: true, min: 0 } }),\n      amount: float({ validation: { isRequired: false, min: 0 } }),\n      product: relationship({\n        ref: \"Product.applications\",\n        many: false,\n      }),\n      applicant: relationship({\n        ref: \"User.applicationsToApply\",\n        many: false,\n      }),\n      creator: relationship({\n        ref: \"User.applications\",\n        many: false,\n      }),\n      type: relationship({\n        ref: \"ApplicationType.applications\",\n        many: false,\n      }),\n    },\n  }),\n  ApplicationType: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      applications: relationship({\n        ref: \"Application.type\",\n        many: true,\n      }),\n    },\n  }),\n  Product: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      description: text({}),\n      price: float({ validation: { isRequired: true, min: 0 } }),\n      stock: float({ validation: { isRequired: true, min: 0 } }),\n      status: select({\n        type: \"string\",\n        options: [\"active\", \"inactive\", \"discontinued\"],\n        defaultValue: \"active\",\n        validation: { isRequired: true },\n      }),\n      code: text({}),\n      ean: text({}),\n      productBrand: relationship({\n        ref: \"ProductBrand.products\",\n        many: false,\n      }),\n      pricedBy: select({\n        type: \"string\",\n        options: [\"amount\", \"length\"],\n        defaultValue: \"amount\",\n        validation: { isRequired: true },\n      }),\n      applications: relationship({\n        ref: \"Application.product\",\n        many: true,\n      }),\n      warrantyTime: float({ validation: { isRequired: false, min: 0 } }),\n    },\n  }),\n  ProductBrand: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      products: relationship({ ref: \"Product.productBrand\", many: true }),\n    },\n  }),\n  Car: list({\n    access: allowAll,\n    fields: {\n      vin: text(),\n      carModel: relationship({\n        ref: \"CarModel.cars\",\n        many: false,\n      }),\n      licensePlate: text({ validation: { isRequired: true } }),\n      workOrders: relationship({ ref: \"WorkOrder.car\", many: true }),\n    },\n  }),\n  CarModel: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      cars: relationship({ ref: \"Car.carModel\", many: true }),\n      carBrand: relationship({ ref: \"CarBrand.carModels\", many: false }),\n    },\n  }),\n  CarBrand: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      carModels: relationship({ ref: \"CarModel.carBrand\", many: true }),\n    },\n  }),\n};\n", "// Welcome to some authentication for Keystone\n//\n// This is using @keystone-6/auth to add the following\n// - A sign-in page for your Admin UI\n// - A cookie-based stateless session strategy\n//    - Using a User email as the identifier\n//    - 30 day cookie expiration\n//\n// This file does not configure what Users can do, and the default for this starter\n// project is to allow anyone - logged-in or not - to do anything.\n//\n// If you want to prevent random people on the internet from accessing your data,\n// you can find out how by reading https://keystonejs.com/docs/guides/auth-and-access-control\n//\n// If you want to learn more about how our out-of-the-box authentication works, please\n// read https://keystonejs.com/docs/apis/auth#authentication-api\n\nimport { randomBytes } from \"crypto\";\nimport { createAuth } from \"@keystone-6/auth\";\n\n// see https://keystonejs.com/docs/apis/session for the session docs\nimport { statelessSessions } from \"@keystone-6/core/session\";\n\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret && process.env.NODE_ENV !== \"production\") {\n  sessionSecret = randomBytes(32).toString(\"hex\");\n}\n\n// withAuth is a function we can use to wrap our base configuration\nconst { withAuth } = createAuth({\n  listKey: \"User\",\n  identityField: \"username\",\n\n  // this is a GraphQL query fragment for fetching what data will be attached to a context.session\n  //   this can be helpful for when you are writing your access control functions\n  //   you can find out more at https://keystonejs.com/docs/guides/auth-and-access-control\n  sessionData: \"username role\",\n  secretField: \"password\",\n\n  // WARNING: remove initFirstItem functionality in production\n  //   see https://keystonejs.com/docs/config/auth#init-first-item for more\n  initFirstItem: {\n    // if there are no items in the database, by configuring this field\n    //   you are asking the Keystone AdminUI to create a new user\n    //   providing inputs for these fields\n    fields: [\"username\", \"firstname\", \"role\", \"email\", \"password\"],\n\n    // it uses context.sudo() to do this, which bypasses any access control you might have\n    //   you shouldn't use this in production\n  },\n});\n\n// statelessSessions uses cookies for session tracking\n//   these cookies have an expiry, in seconds\n//   we use an expiry of 30 days for this starter\nconst sessionMaxAge = 60 * 60 * 24 * 30;\n\n// you can find out more at https://keystonejs.com/docs/apis/session#session-api\nconst session = statelessSessions({\n  maxAge: sessionMaxAge,\n  secret: sessionSecret!,\n});\n\nexport { withAuth, session };\n"],
  "mappings": "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",
  "names": ["import_core"]
}
